{
  "title": "Android build.gradle.ktsのすゝめ",
  "desc": "Android build.gradle.ktsのすゝめ",
  "date": "2019/07/10",
  "tags": "Android Kotlin",
  "bodyContent": "# Android: build.gradle.ktsのすゝめ\n[Github](https://github.com/SorrowBlue/AndroidGradleKts)\n[![Build Status](https://travis-ci.com/SorrowBlue/sorrowblue.github.io.svg?token=69SwqJzT2mqgmiiajAiQ&branch=gh-pages)](https://travis-ci.com/SorrowBlue/sorrowblue.github.io)\n\n## 環境\n\n|tool|version|\n|:-------------------:|:----------:|\n|Gradle               |5.4.1       |\n|Kotlin               |1.3.41      |\n|Android Studio       |3.5 Beta 5  |\n|Android Gradle Plugin|3.5.0-beta05|\n\n\n## 既存のプロジェクトへの導入\n\n1. 設定の変更\n`ファイル - 設定 - 言語＆フレームワーク - Kotlin - Kotlinスクリプト`\nファイル変更時にスクリプト依存関係を再ロードする にチェックする  \n![build_src](/images/android-gradle-kts/settings_kotlin-script_reload.webp)\n\n1. プロジェクトルートに `buildSrc` を作成  \n![build_src](/images/android-gradle-kts/build_src.webp)\n\n1. `buildSrc` に `build.gradle.kts` と `settings.gradle.kts` を作成  \n![build-settings-gradle-kts](/images/android-gradle-kts/build-settings-gradle-kts.webp)\n\n1. `build.gradle.kts` に記述\n\n```kotlin\nplugins {\n    `kotlin-dsl`\n}\nrepositories {\n    jcenter()\n    google()\n}\ndependencies {\n    implementation(\"com.android.tools.build:gradle:3.5.0-beta05\")\n    implementation(\"org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.41\")\n}\n```\n\n5. Sync now(今すぐ同期)  \n![sync_now](/images/android-gradle-kts/sync_now.webp)\n\n6. プロジェクトルートの `settings.gradle` を `settings.gradle.kts` にリネーム  \n![settings-gradle-kts](/images/android-gradle-kts/settings-gradle-kts.webp)\n\n7. `settings.gradle.kts` を編集\n```kotlin\ninclude(\":app\")\nrootProject.name = \"My Application\"\n```\n8. プロジェクトルートの `build.gradle` を `build.gradle.kts` にリネーム\n\n9.  `build.gradle.kts` を編集\n```kotlin\nbuildscript {\n    repositories {\n        google()\n        jcenter()        \n    }\n    dependencies {\n        classpath(\"com.android.tools.build:gradle:3.5.0-beta05\")\n        classpath(\"org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.41\")\n    }\n}\nallprojects {\n    repositories {\n        google()\n        jcenter()\n       \n    }\n}\ntask<Delete>(\"clean\") { delete(rootProject.buildDir) }\n```\n\n10. `app/build.gradle` を `app/build.gradle.kts` にリネーム\n\n11. `app/build.gradle.kts` を編集\n\n```kotlin\nplugins {\n    id(\"com.android.application\")\n    id(\"kotlin-android\")\n    id(\"kotlin-android-extensions\")\n}\nandroid {\n    compileSdkVersion(29)\n    buildToolsVersion = \"29.0.0\"\n    defaultConfig {\n        applicationId = \"com.sorrowblue.myapplication\"\n        minSdkVersion(23)\n        targetSdkVersion(29)\n        versionCode =1\n        versionName =\"1.0\"\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\n    }\n    buildTypes {\n        getByName(\"release\") {\n            isMinifyEnabled = false\n            proguardFiles(getDefaultProguardFile(\"proguard-android-optimize.txt\"), \"proguard-rules.pro\")\n        }\n    }\n}\ndependencies {\n    implementation(\"org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.41\")\n    implementation(\"androidx.appcompat:appcompat:1.0.2\")\n    implementation(\"androidx.core:core-ktx:1.0.2\")\n    implementation(\"androidx.constraintlayout:constraintlayout:1.1.3\")\n    testImplementation(\"junit:junit:4.12\")\n    androidTestImplementation(\"androidx.test.ext:junit:1.1.0\")\n    androidTestImplementation(\"androidx.test.espresso:espresso-core:3.1.1\")\n}\n```\n12. Sync now(今すぐ同期)\n\n## スマートに書く\n`getByName(\"release\")` このあたりを拡張関数で記述する  \n\n`buildSrc/src/main/kotlin/Project.kt` を作成  \n\n`Project.kt`\n```kotlin\nimport com.android.build.gradle.internal.dsl.BuildType\nimport org.gradle.api.NamedDomainObjectContainer\nfun NamedDomainObjectContainer<BuildType>.release(body: BuildType.() -> Unit) {\n    getByName(\"release\") { body(this) }\n}\n```\n\n`app/build.gradle.kts`\n```kotlin\nrelease {\n\tisMinifyEnabled = false\n\tproguardFiles(getDefaultProguardFile(\"proguard-android-optimize.txt\"), \"proguard-rules.pro\")\n}\n```\n\n\n## 変数を定義\nもちろん変数も定義して使える\n\n`buildSrc/src/main/kotlin/Versions.kt`\n```kotlin\nobject Versions {\n\tconst val kotlin = \"1.3.41\"\n\tconst val appcompat = \"1.0.2\"\n\tconst val `core-ktx` = \"1.0.2\"\n\tconst val constraintlayout = \"1.1.3\"\n\tconst val junit = \"4.12\"\n    const val androidx_junit = \"1.1.0\"\n    const val `espresso-core` = \"3.1.1\"\n}\n```\n\n`buildSrc/src/main/kotlin/Deps.kt`\n```kotlin\nobject Deps {\n\tconst val `kotlin-stdlib-jdk7` = \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:${Versions.kotlin}\"\n\tconst val appcompat = \"androidx.appcompat:appcompat:${Versions.appcompat}\"\n    const val `core-ktx` = (\"androidx.core:core-ktx:${Versions.`core-ktx`}\")\n    const val constraintlayout = \"androidx.constraintlayout:constraintlayout:${Versions.constraintlayout}\"\n    const val junit = \"junit:junit:${Versions.junit}\"\n    const val androidx_junit = \"androidx.test.ext:junit:${Versions.androidx_junit}\"\n    const val `espresso-core` = \"androidx.test.espresso:espresso-core:${Versions.`espresso-core`}\"\n}\n```\n\n`app/build.gradle.kts`\n```kotlin\ndependencies {\n    implementation(Deps.`kotlin-stdlib-jdk7`)\n    implementation(Deps.appcompat)\n    implementation(Deps.`core-ktx`)\n    implementation(Deps.constraintlayout)\n    testImplementation(Deps.junit)\n    androidTestImplementation(Deps.androidx_junit)\n    androidTestImplementation(Deps.`espresso-core`)\n}\n```\n\n## Tips\n\n### 各モジュールの `minSdkVersion` `targetSdkVersion` などをまとめる\n\n`Project.kt`\n```kotlin\nfun Project.module(action: LibraryExtension.() -> Unit) {\n\tafterEvaluate {\n\t\tif (hasProperty(\"android\") && project.name != \"app\") {\n\t\t\taction(extensions.getByName(\"android\") as LibraryExtension)\n\t\t}\n\t}\n}\n```\n\n`/build.gradle.kts`\n```kotlin\nsubprojects {\n\tmodule {\n\t\tcompileSdkVersion(COMPILE_SDK_VERSION)\n\t\tdefaultConfig {\n\t\t\tminSdkVersion(MIN_SDK_VERSION)\n\t\t\ttargetSdkVersion(TARGET_SDK_VERSION)\n\t\t\tconsumerProguardFiles(`consumer-rules`)\n\t\t\ttestInstrumentationRunner = ANDROID_JUNIT_RUNNER\n\t\t}\n\t}\n}\n```\n\n###  任意の箇所でapplyしたいとき\n`/app/build.gradle.kts`\n```kotlin\nplugins {\n\tid(\"com.google.gms.google-services\") apply false\n}\n/*..........processing..........*/\napply(plugin = \"com.google.gms.google-services\")\n```\n\n### プラグインを共通化したい\n`/build.gradle.kts`\n```kotlin\nsubprojects {\n\tif (project.name == \"app\") {\n\t\tapply(plugin = \"com.android.application\")\n\t} else {\n\t\tapply(plugin = \"com.android.library\")\n\t}\n\tapply(plugin = \"kotlin-android\")\n\tapply(plugin = \"kotlin-android-extensions\")\n}\n```",
  "bodyHtml": "<h1>Android: build.gradle.ktsのすゝめ</h1>\n<p><a href=\"https://github.com/SorrowBlue/AndroidGradleKts\">Github</a>\n<a href=\"https://travis-ci.com/SorrowBlue/sorrowblue.github.io\"><img src=\"https://travis-ci.com/SorrowBlue/sorrowblue.github.io.svg?token=69SwqJzT2mqgmiiajAiQ&amp;branch=gh-pages\" alt=\"Build Status\"></a></p>\n<h2>環境</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">tool</th>\n<th style=\"text-align:center\">version</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Gradle</td>\n<td style=\"text-align:center\">5.4.1</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Kotlin</td>\n<td style=\"text-align:center\">1.3.41</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Android Studio</td>\n<td style=\"text-align:center\">3.5 Beta 5</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Android Gradle Plugin</td>\n<td style=\"text-align:center\">3.5.0-beta05</td>\n</tr>\n</tbody>\n</table>\n<h2>既存のプロジェクトへの導入</h2>\n<ol>\n<li>\n<p>設定の変更\n<code>ファイル - 設定 - 言語＆フレームワーク - Kotlin - Kotlinスクリプト</code>\nファイル変更時にスクリプト依存関係を再ロードする にチェックする<br>\n<img src=\"/images/android-gradle-kts/settings_kotlin-script_reload.webp\" alt=\"build_src\"></p>\n</li>\n<li>\n<p>プロジェクトルートに <code>buildSrc</code> を作成<br>\n<img src=\"/images/android-gradle-kts/build_src.webp\" alt=\"build_src\"></p>\n</li>\n<li>\n<p><code>buildSrc</code> に <code>build.gradle.kts</code> と <code>settings.gradle.kts</code> を作成<br>\n<img src=\"/images/android-gradle-kts/build-settings-gradle-kts.webp\" alt=\"build-settings-gradle-kts\"></p>\n</li>\n<li>\n<p><code>build.gradle.kts</code> に記述</p>\n</li>\n</ol>\n<pre><code class=\"hljs\">plugins {\n    `kotlin-dsl`\n}\nrepositories {\n    jcenter()\n    google()\n}\ndependencies {\n    implementation(<span class=\"hljs-string\">\"com.android.tools.build:gradle:3.5.0-beta05\"</span>)\n    implementation(<span class=\"hljs-string\">\"org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.41\"</span>)\n}</code></pre><ol start=\"5\">\n<li>\n<p>Sync now(今すぐ同期)<br>\n<img src=\"/images/android-gradle-kts/sync_now.webp\" alt=\"sync_now\"></p>\n</li>\n<li>\n<p>プロジェクトルートの <code>settings.gradle</code> を <code>settings.gradle.kts</code> にリネーム<br>\n<img src=\"/images/android-gradle-kts/settings-gradle-kts.webp\" alt=\"settings-gradle-kts\"></p>\n</li>\n<li>\n<p><code>settings.gradle.kts</code> を編集</p>\n</li>\n</ol>\n<pre><code class=\"hljs\">include(<span class=\"hljs-string\">\":app\"</span>)\nrootProject.name = <span class=\"hljs-string\">\"My Application\"</span></code></pre><ol start=\"8\">\n<li>\n<p>プロジェクトルートの <code>build.gradle</code> を <code>build.gradle.kts</code> にリネーム</p>\n</li>\n<li>\n<p><code>build.gradle.kts</code> を編集</p>\n</li>\n</ol>\n<pre><code class=\"hljs\">buildscript {\n    repositories {\n        google()\n        jcenter()        \n    }\n    dependencies {\n        classpath(<span class=\"hljs-string\">\"com.android.tools.build:gradle:3.5.0-beta05\"</span>)\n        classpath(<span class=\"hljs-string\">\"org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.41\"</span>)\n    }\n}\nallprojects {\n    repositories {\n        google()\n        jcenter()\n       \n    }\n}\ntask&lt;Delete&gt;(<span class=\"hljs-string\">\"clean\"</span>) { delete(rootProject.buildDir) }</code></pre><ol start=\"10\">\n<li>\n<p><code>app/build.gradle</code> を <code>app/build.gradle.kts</code> にリネーム</p>\n</li>\n<li>\n<p><code>app/build.gradle.kts</code> を編集</p>\n</li>\n</ol>\n<pre><code class=\"hljs\">plugins {\n    id(<span class=\"hljs-string\">\"com.android.application\"</span>)\n    id(<span class=\"hljs-string\">\"kotlin-android\"</span>)\n    id(<span class=\"hljs-string\">\"kotlin-android-extensions\"</span>)\n}\nandroid {\n    compileSdkVersion(<span class=\"hljs-number\">29</span>)\n    buildToolsVersion = <span class=\"hljs-string\">\"29.0.0\"</span>\n    defaultConfig {\n        applicationId = <span class=\"hljs-string\">\"com.sorrowblue.myapplication\"</span>\n        minSdkVersion(<span class=\"hljs-number\">23</span>)\n        targetSdkVersion(<span class=\"hljs-number\">29</span>)\n        versionCode =<span class=\"hljs-number\">1</span>\n        versionName =<span class=\"hljs-string\">\"1.0\"</span>\n        testInstrumentationRunner = <span class=\"hljs-string\">\"androidx.test.runner.AndroidJUnitRunner\"</span>\n    }\n    buildTypes {\n        getByName(<span class=\"hljs-string\">\"release\"</span>) {\n            isMinifyEnabled = <span class=\"hljs-literal\">false</span>\n            proguardFiles(getDefaultProguardFile(<span class=\"hljs-string\">\"proguard-android-optimize.txt\"</span>), <span class=\"hljs-string\">\"proguard-rules.pro\"</span>)\n        }\n    }\n}\ndependencies {\n    implementation(<span class=\"hljs-string\">\"org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.41\"</span>)\n    implementation(<span class=\"hljs-string\">\"androidx.appcompat:appcompat:1.0.2\"</span>)\n    implementation(<span class=\"hljs-string\">\"androidx.core:core-ktx:1.0.2\"</span>)\n    implementation(<span class=\"hljs-string\">\"androidx.constraintlayout:constraintlayout:1.1.3\"</span>)\n    testImplementation(<span class=\"hljs-string\">\"junit:junit:4.12\"</span>)\n    androidTestImplementation(<span class=\"hljs-string\">\"androidx.test.ext:junit:1.1.0\"</span>)\n    androidTestImplementation(<span class=\"hljs-string\">\"androidx.test.espresso:espresso-core:3.1.1\"</span>)\n}</code></pre><ol start=\"12\">\n<li>Sync now(今すぐ同期)</li>\n</ol>\n<h2>スマートに書く</h2>\n<p><code>getByName(&quot;release&quot;)</code> このあたりを拡張関数で記述する</p>\n<p><code>buildSrc/src/main/kotlin/Project.kt</code> を作成</p>\n<p><code>Project.kt</code></p>\n<pre><code class=\"hljs\"><span class=\"hljs-keyword\">import</span> com.android.build.gradle.<span class=\"hljs-keyword\">internal</span>.dsl.BuildType\n<span class=\"hljs-keyword\">import</span> org.gradle.api.NamedDomainObjectContainer\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> NamedDomainObjectContainer<span class=\"hljs-type\">&lt;BuildType&gt;</span>.<span class=\"hljs-title\">release</span><span class=\"hljs-params\">(body: <span class=\"hljs-type\">BuildType</span>.()</span></span> -&gt; <span class=\"hljs-built_in\">Unit</span>) {\n    getByName(<span class=\"hljs-string\">\"release\"</span>) { body(<span class=\"hljs-keyword\">this</span>) }\n}</code></pre><p><code>app/build.gradle.kts</code></p>\n<pre><code class=\"hljs\">release {\n\tisMinifyEnabled = <span class=\"hljs-literal\">false</span>\n\tproguardFiles(getDefaultProguardFile(<span class=\"hljs-string\">\"proguard-android-optimize.txt\"</span>), <span class=\"hljs-string\">\"proguard-rules.pro\"</span>)\n}</code></pre><h2>変数を定義</h2>\n<p>もちろん変数も定義して使える</p>\n<p><code>buildSrc/src/main/kotlin/Versions.kt</code></p>\n<pre><code class=\"hljs\"><span class=\"hljs-keyword\">object</span> Versions {\n\t<span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">val</span> kotlin = <span class=\"hljs-string\">\"1.3.41\"</span>\n\t<span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">val</span> appcompat = <span class=\"hljs-string\">\"1.0.2\"</span>\n\t<span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">val</span> `core-ktx` = <span class=\"hljs-string\">\"1.0.2\"</span>\n\t<span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">val</span> constraintlayout = <span class=\"hljs-string\">\"1.1.3\"</span>\n\t<span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">val</span> junit = <span class=\"hljs-string\">\"4.12\"</span>\n    <span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">val</span> androidx_junit = <span class=\"hljs-string\">\"1.1.0\"</span>\n    <span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">val</span> `espresso-core` = <span class=\"hljs-string\">\"3.1.1\"</span>\n}</code></pre><p><code>buildSrc/src/main/kotlin/Deps.kt</code></p>\n<pre><code class=\"hljs\"><span class=\"hljs-keyword\">object</span> Deps {\n\t<span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">val</span> `kotlin-stdlib-jdk7` = <span class=\"hljs-string\">\"org.jetbrains.kotlin:kotlin-stdlib-jdk7:<span class=\"hljs-subst\">${Versions.kotlin}</span>\"</span>\n\t<span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">val</span> appcompat = <span class=\"hljs-string\">\"androidx.appcompat:appcompat:<span class=\"hljs-subst\">${Versions.appcompat}</span>\"</span>\n    <span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">val</span> `core-ktx` = (<span class=\"hljs-string\">\"androidx.core:core-ktx:<span class=\"hljs-subst\">${Versions.`core-ktx`}</span>\"</span>)\n    <span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">val</span> constraintlayout = <span class=\"hljs-string\">\"androidx.constraintlayout:constraintlayout:<span class=\"hljs-subst\">${Versions.constraintlayout}</span>\"</span>\n    <span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">val</span> junit = <span class=\"hljs-string\">\"junit:junit:<span class=\"hljs-subst\">${Versions.junit}</span>\"</span>\n    <span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">val</span> androidx_junit = <span class=\"hljs-string\">\"androidx.test.ext:junit:<span class=\"hljs-subst\">${Versions.androidx_junit}</span>\"</span>\n    <span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">val</span> `espresso-core` = <span class=\"hljs-string\">\"androidx.test.espresso:espresso-core:<span class=\"hljs-subst\">${Versions.`espresso-core`}</span>\"</span>\n}</code></pre><p><code>app/build.gradle.kts</code></p>\n<pre><code class=\"hljs\">dependencies {\n    implementation(Deps.`kotlin-stdlib-jdk7`)\n    implementation(Deps.appcompat)\n    implementation(Deps.`core-ktx`)\n    implementation(Deps.constraintlayout)\n    testImplementation(Deps.junit)\n    androidTestImplementation(Deps.androidx_junit)\n    androidTestImplementation(Deps.`espresso-core`)\n}</code></pre><h2>Tips</h2>\n<h3>各モジュールの <code>minSdkVersion</code> <code>targetSdkVersion</code> などをまとめる</h3>\n<p><code>Project.kt</code></p>\n<pre><code class=\"hljs\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> Project.<span class=\"hljs-title\">module</span><span class=\"hljs-params\">(action: <span class=\"hljs-type\">LibraryExtension</span>.()</span></span> -&gt; <span class=\"hljs-built_in\">Unit</span>) {\n\tafterEvaluate {\n\t\t<span class=\"hljs-keyword\">if</span> (hasProperty(<span class=\"hljs-string\">\"android\"</span>) &amp;&amp; project.name != <span class=\"hljs-string\">\"app\"</span>) {\n\t\t\taction(extensions.getByName(<span class=\"hljs-string\">\"android\"</span>) <span class=\"hljs-keyword\">as</span> LibraryExtension)\n\t\t}\n\t}\n}</code></pre><p><code>/build.gradle.kts</code></p>\n<pre><code class=\"hljs\">subprojects {\n\tmodule {\n\t\tcompileSdkVersion(COMPILE_SDK_VERSION)\n\t\tdefaultConfig {\n\t\t\tminSdkVersion(MIN_SDK_VERSION)\n\t\t\ttargetSdkVersion(TARGET_SDK_VERSION)\n\t\t\tconsumerProguardFiles(`consumer-rules`)\n\t\t\ttestInstrumentationRunner = ANDROID_JUNIT_RUNNER\n\t\t}\n\t}\n}</code></pre><h3>任意の箇所でapplyしたいとき</h3>\n<p><code>/app/build.gradle.kts</code></p>\n<pre><code class=\"hljs\">plugins {\n\tid(<span class=\"hljs-string\">\"com.google.gms.google-services\"</span>) apply <span class=\"hljs-literal\">false</span>\n}\n<span class=\"hljs-comment\">/*..........processing..........*/</span>\napply(plugin = <span class=\"hljs-string\">\"com.google.gms.google-services\"</span>)</code></pre><h3>プラグインを共通化したい</h3>\n<p><code>/build.gradle.kts</code></p>\n<pre><code class=\"hljs\">subprojects {\n\t<span class=\"hljs-keyword\">if</span> (project.name == <span class=\"hljs-string\">\"app\"</span>) {\n\t\tapply(plugin = <span class=\"hljs-string\">\"com.android.application\"</span>)\n\t} <span class=\"hljs-keyword\">else</span> {\n\t\tapply(plugin = <span class=\"hljs-string\">\"com.android.library\"</span>)\n\t}\n\tapply(plugin = <span class=\"hljs-string\">\"kotlin-android\"</span>)\n\tapply(plugin = <span class=\"hljs-string\">\"kotlin-android-extensions\"</span>)\n}</code></pre>",
  "dir": "static/content/blog/json",
  "base": "2019-07-10_android-gradle-kts.json",
  "ext": ".json",
  "sourceBase": "2019-07-10_android-gradle-kts.md",
  "sourceExt": ".md"
}